grf {
    grfid:   "\5F\5F\03\02";
    name:    string(STR_GRF_NAME);
    desc:    string(STR_DESC_4, string(STR_GRF_DESC), string(STR_GRF_DESC_README),string(STR_GRF_DESC_MTR));
    url:     string(STR_GRF_URL);
    version: 4;
    min_compatible_version: 0;

    param 0 {
        param_loading_speed {
            type: int;
            name: string(STR_PARAM_LOADING_SPEED);
            desc: string(STR_PARAM_LOADING_SPEED_DESC);
            min_value: 0;
            max_value: 3;
            def_value: 1;
            names: {
                0: string(STR_PARAM_PERCENT_50);
                1: string(STR_PARAM_PERCENT_100);
                2: string(STR_PARAM_PERCENT_200);
                3: string(STR_PARAM_PERCENT_400);
            };
        }
    }
    param 1 {
        param_purchase_cost {
            type: int;
            name: string(STR_PARAM_PURCHASE_COST);
            desc: string(STR_PARAM_PURCHASE_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 2;
            names: {
                0: string(STR_PARAM_PERCENT_6);
                1: string(STR_PARAM_PERCENT_13);
                2: string(STR_PARAM_PERCENT_25);
                3: string(STR_PARAM_PERCENT_50);
                4: string(STR_PARAM_PERCENT_100);
                5: string(STR_PARAM_PERCENT_200);
                6: string(STR_PARAM_PERCENT_400);
                7: string(STR_PARAM_PERCENT_800);
                8: string(STR_PARAM_PERCENT_1600);
            };
        }
    }
    param 2 {
        param_running_cost {
            type: int;
            name: string(STR_PARAM_RUNNING_COST);
            desc: string(STR_PARAM_RUNNING_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 2;
            names: {
                0: string(STR_PARAM_PERCENT_6);
                1: string(STR_PARAM_PERCENT_13);
                2: string(STR_PARAM_PERCENT_25);
                3: string(STR_PARAM_PERCENT_50);
                4: string(STR_PARAM_PERCENT_100);
                5: string(STR_PARAM_PERCENT_200);
                6: string(STR_PARAM_PERCENT_400);
                7: string(STR_PARAM_PERCENT_800);
                8: string(STR_PARAM_PERCENT_1600);
            };
        }
    }
    param 3 {
        param_cargo_decay {
            type: int;
            name: string(STR_PARAM_CARGO_DECAY);
            desc: string(STR_PARAM_CARGO_DECAY_DESC);
            min_value: 0;
            max_value: 2;
            def_value: 0;
            names: {
                0: string(STR_PARAM_STANDARD);
                1: string(STR_PARAM_LONG);
                2: string(STR_PARAM_VERY_LONG);
            };
        }
    }
    param 4 {
        param_cargo_capacity {
            type: int;
            name: string(STR_PARAM_CARGO_CAPACITY);
            desc: string(STR_PARAM_CARGO_CAPACITY_DESC);
            min_value: 0;
            max_value: 5;
            def_value: 2;
            names: {
                0: string(STR_PARAM_PERCENT_50);
                1: string(STR_PARAM_PERCENT_75);
                2: string(STR_PARAM_PERCENT_100);
                3: string(STR_PARAM_PERCENT_125);
                4: string(STR_PARAM_PERCENT_150);
                5: string(STR_PARAM_PERCENT_200);
            };
        }
    }
}

basecost {
    PR_BUILD_VEHICLE_TRAIN: param_purchase_cost - 3;
    PR_BUILD_VEHICLE_WAGON: param_purchase_cost + 1;
    PR_RUNNING_TRAIN_STEAM: param_running_cost  - 4;
    PR_RUNNING_TRAIN_DIESEL: param_running_cost  - 4;
    PR_RUNNING_TRAIN_ELECTRIC: param_running_cost  - 4;
 }

/* disable original trains */
disable_item(FEAT_TRAINS, 0, 115);

/* only OpenTTD is supported, not enforced though */
if (ttd_platform != PLATFORM_OPENTTD) {
    //requires OpenTTD
    error(FATAL, USED_WITH, "OpenTTD");
}
else {
    if (openttd_version < version_openttd(1, 4, 0, 26157)) {
        //requires OpenTTD 1.4.0-beta1 or later since the introduction of cargo_age_period and articulated vehicle position.
        error(FATAL, REQUIRES_OPENTTD, "1.4.0-beta1 / r26157");
    }
}

//check if dynamic_engines is enabled
if (dynamic_engines == 0) {
 //Required dynamic_engines to load all vehicles
 error(FATAL, USED_WITH, string(STR_USED_WITH_DYNAMIC_ENGINES));
}

/* fix depot view */
train_width_32_px = 1;
traininfo_y_offset = 2;

// Begin template

// Learned from JP+ Shinkansen

// Empty Template

template template_empty() {
  [0, 0, 2, 2, 0, 0, CROP, "gfx/empty.png"]
  [0, 0, 2, 2, 0, 0, CROP, "gfx/empty.png"]
  [0, 0, 2, 2, 0, 0, CROP, "gfx/empty.png"]
  [0, 0, 2, 2, 0, 0, CROP, "gfx/empty.png"]
  [0, 0, 2, 2, 0, 0, CROP, "gfx/empty.png"]
  [0, 0, 2, 2, 0, 0, CROP, "gfx/empty.png"]
  [0, 0, 2, 2, 0, 0, CROP, "gfx/empty.png"]
  [0, 0, 2, 2, 0, 0, CROP, "gfx/empty.png"]
}

// Purchase Templates
template template_purchase_empty() {
    // a: vehicle type (all lower cases), b: vehicle name (all lower cases)
    []
    []
    []
    []
    []
    []
    [0, 0, 2, 2, 0, 0, "gfx/empty.png"]
    []
}

template template_purchase (a, b) {
    // a: vehicle type (all lower cases), b: vehicle name (all lower cases)
    []
    []
    []
    []
    []
    []
    [672,   0, 192,  80, -96, -60, "gfx/"+a+"/"+b+"_32bpp.png"]
    []
}

template template_standard (a, b) {
    [  0,   0,  36, 160, -12, -80, "gfx/"+a+"/"+b+"_32bpp.png"]
    [ 44,   0, 120, 116, -72, -76, "gfx/"+a+"/"+b+"_32bpp.png"]
    [172,   0, 192,  80, -96, -60, "gfx/"+a+"/"+b+"_32bpp.png"]
    [372,   0, 120, 116, -40, -76, "gfx/"+a+"/"+b+"_32bpp.png"]
    [500,   0,  36, 160, -12, -80, "gfx/"+a+"/"+b+"_32bpp.png"]
    [544,   0, 120, 116, -72, -76, "gfx/"+a+"/"+b+"_32bpp.png"]
    [672,   0, 192,  80, -96, -60, "gfx/"+a+"/"+b+"_32bpp.png"]
    [872,   0, 120, 116, -40, -76, "gfx/"+a+"/"+b+"_32bpp.png"]
}

template template_reversed (a, b) {
    [500,   0,  36, 160, -12, -80, "gfx/"+a+"/"+b+"_32bpp.png"]
    [544,   0, 120, 116, -72, -76, "gfx/"+a+"/"+b+"_32bpp.png"]
    [672,   0, 192,  80, -96, -60, "gfx/"+a+"/"+b+"_32bpp.png"]
    [872,   0, 120, 116, -40, -76, "gfx/"+a+"/"+b+"_32bpp.png"]
    [  0,   0,  36, 160, -12, -80, "gfx/"+a+"/"+b+"_32bpp.png"]
    [ 44,   0, 120, 116, -72, -76, "gfx/"+a+"/"+b+"_32bpp.png"]
    [172,   0, 192,  80, -96, -60, "gfx/"+a+"/"+b+"_32bpp.png"]
    [372,   0, 120, 116, -40, -76, "gfx/"+a+"/"+b+"_32bpp.png"]
}

// Below shamelessly stolen from JP+ Shinkansen
spriteset (spriteset_too_many_12) {
    template_empty ()
}

alternative_sprites (spriteset_too_many_12, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/less12.png") {
    [  0,   0,  32, 144, -12, -72]
    [ 40,   0, 120, 116, -72, -76]
    [168,   0, 192,  80, -96, -60]
    [368,   0, 120, 116, -40, -76]
    [496,   0,  32, 144, -12, -72]
    [536,   0, 120, 116, -72, -76]
    [664,   0, 192,  80, -96, -60]
    [864,   0, 120, 116, -40, -76]
}

spriteset (spriteset_erroremu) {
    template_empty ()
}

alternative_sprites (spriteset_erroremu, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/erroremu.png") {
    [  0,   0,  32, 144, -12, -72]
    [ 40,   0, 120, 116, -72, -76]
    [168,   0, 192,  80, -96, -60]
    [368,   0, 120, 116, -40, -76]
    [496,   0,  32, 144, -12, -72]
    [536,   0, 120, 116, -72, -76]
    [664,   0, 192,  80, -96, -60]
    [864,   0, 120, 116, -40, -76]
}

spriteset (empty_sprites, "gfx/empty.png") {
  [0, 0, 2, 2, 0, 0, CROP]
}
/* 
Using Semi-Standardised Railtype Scheme.
The First Letter:
S - 1435 mm gauge
B - 1520 mm gauge
N - 1067(1000) mm gauge
n - 762(600) mm gauge
D - 1435/1520 mm gauge
d - 1435/1067(1000) mm gauge
c - 1067/762(600) mm gauge
M - Monorail;
L - Magnetic Levitation (Maglev);

The Second Letter:
For S, B, D gauges:
A - 80 km/h
B - 120 km/h
C - 160 km/h
D - 210 km/h
E - 250 km/h (unlimited for B gauge)
F - 310 km/h
G - Unlimited;
For N, d, c gauges:
A - 80 km/h
B - 100 km/h
C - 130 km/h
D - 160 km/h;
For n and c gauges:
A - 60 km/h;
For Monorail:
A - Unlimited;
For Maglev:
A - 120 km/h
B - Unlimited;

The Third Letter:
A - Very Low Axle Load - <= 15 t
B - Low Axle Load - 16-19 t
C - Medium Axle Load - 20-23 t
D - High Axle Load - 24-27 t
E - Very High Axle Load - >= 28 t;

The Last Letter:
N - Non-Electrified
A - 25 kV AC
d - 1.5 kV DC
( - 25 kV AC / 1.5 kV DC
3 - Third Rail Electrification;
*/

railtypetable {
    RAIL,
    ELRL,
    MONO,
    MGLV,
    SAAN: [SAAN, RAIL],       //NOT IN CHINA SET: RAILS
    SABN: [SABN, SAAN, RAIL], //NOT IN CHINA SET: RAILS
    SACN: [SACN, SAAN, RAIL], //NOT IN CHINA SET: RAILS
    SADN: [SADN, SAAN, RAIL],
    SAEN: [SAEN, SAAN, RAIL],
//    SBDN: [SBDN, SADN, SAAN, RAIL],
//    SBEN: [SBEN, SAEN, SAAN, RAIL],
//    SCDN: [SCDN, SADN, SAAN, RAIL],
    SAAA: [SAAA, SAAE, ELRL],       //NOT IN CHINA SET: RAILS
    SABA: [SABA, SAAA, SAAE, ELRL], //NOT IN CHINA SET: RAILS
    SACA: [SACA, SAAA, SAAE, ELRL], //NOT IN CHINA SET: RAILS
    SADA: [SADA, SAAA, SAAE, ELRL], //NOT IN CHINA SET: RAILS
    SAEA: [SAEA, SAAA, SAAE, ELRL], //NOT IN CHINA SET: RAILS
//    SBDA: [SBDA, SADA, SAAA, SAAE, ELRL],
//    SBEA: [SBEA, SAEA, SAAA, SAAE, ELRL],
//    SCCA: [SCCA, SACA, SAAA, SAAE, ELRL],
//    SCDA: [SCDA, SADA, SAAA, SAAE, ELRL],
//    SDCA: [SDCA, SACA, SAAA, SAAE, ELRL],
//    SDDA: [SDDA, SADA, SAAA, SAAE, ELRL],
//    SECA: [SECA, SACA, SAAA, SAAE, ELRL],
//    SEDA: [SEDA, SADA, SAAA, SAAE, ELRL],
//    SFCA: [SFCA, SACA, SAAA, SAAE, ELRL],
//    SGCA: [SGCA, SACA, SAAA, SAAE, ELRL],
//    SACB: [SACB, SAAB, SAAE, ELRL],
//    SBCB: [SBCB, SACB, SAAB, SAAE, ELRL],
    SACD: [SACD, SAAD, SAAE, ELRL],
//    SBCD: [SBCD, SACD, SAAD, SAAE, ELRL],
//    SCCD: [SCCD, SACD, SAAD, SAAE, ELRL],
    SACd: [SACd, SAAd, SAAE, ELRL],
//    SBCd: [SBCd, SACd, SAAd, SAAE, ELRL],
//    SCCd: [SCCd, SACd, SAAd, SAAE, ELRL],
    SAC3: [SAC3, SAA3, "3RDR", MTRO, ELRL],
//    SBC3: [SBC3, SAC3, SAA3, "3RDR", MTRO, ELRL],
//    SCC3: [SCC3, SAC3, SAA3, "3RDR", MTRO, ELRL],
    NACN: [NACN, NAAN, NGRL], //NOT IN CHINA SET: RAILS
    NADN: [NADN, NAAN, NGRL],
//    NBDN: [NBDN, NADN, NAAN, NGRL],
//    NCCN: [NCCN, NACN, NAAN, NGRL],
    NADA: [NADA, NAAA, NAAE, ELNG],
//    NBCA: [NBCA, NACA, NAAA, NAAE, ELNG],
//    NBDA: [NBDA, NADA, NAAA, NAAE, ELNG],
//    NCCA: [NCCA, NACA, NAAA, NAAE, ELNG],
//    NCDA: [NCDA, NADA, NAAA, NAAE, ELNG],
//    NDCA: [NDCA, NACA, NAAA, NAAE, ELNG],
    nACN: [nACN, nAAN, NACN, NAAN, NGRL], //NOT IN CHINA SET: RAILS
    nADN: [nADN, nAAN, NADN, NAAN, NGRL],
//    nBDN: [nBDN, nADN, nAAN, NBDN, NADN, NAAN, NGRL],
    nACA: [nACA, nAAA, nAAE, NACA, NAAA, NAAE, ELNG], //NOT IN CHINA SET: RAILS
    nADA: [nADA, nAAA, nAAE, NADA, NAAA, NAAE, ELNG], //NOT IN CHINA SET: RAILS
//    nBDA: [nBDA, nADA, nAAA, nAAE, NBDA, NADA, NAAA, NAAE, ELNG],
//    nCCA: [nCCA, nACA, nAAA, nAAE, NCCA, NACA, NAAA, NAAE, ELNG],
//    nDCA: [nDCA, nACA, nAAA, nAAE, NDCA, NACA, NAAA, NAAE, ELNG],
    mACN: [mACN, mAAN, nACN, nAAN, NACN, NAAN, NGRL],
    BACN: [BACN, BAAN, RLA0, RAIL], //NOT IN CHINA SET: RAILS
    BADN: [BADN, BAAN, RLA0, RAIL],
    BAEN: [BAEN, BAAN, RLA0, RAIL],
//    BBDN: [BBDN, BADN, BAAN, RLA0, RAIL],
//    BBEN: [BBEN, BAEN, BAAN, RLA0, RAIL],
//    BCDN: [BCDN, BADN, BAAN, RLA0, RAIL],
    BACA: [BACA, BAAA, BAAE, ERA1, ELRL], //NOT IN CHINA SET: RAILS
    BADA: [BADA, BAAA, BAAE, ERA1, ELRL], //NOT IN CHINA SET: RAILS
    BAEA: [BAEA, BAAA, BAAE, ERA1, ELRL], //NOT IN CHINA SET: RAILS
//    BBDA: [BBDA, BADA, BAAA, BAAE, ERA1, ELRL],
//    BBEA: [BBEA, BAEA, BAAA, BAAE, ERA1, ELRL],
//    BCDA: [BCDA, BADA, BAAA, BAAE, ERA1, ELRL],
//    BDDA: [BDDA, BADA, BAAA, BAAE, ERA1, ELRL],
//    BECA: [BECA, BACA, BAAA, BAAE, ERA1, ELRL],
//    DBDN: [DBDN, DADN, DAAN, RAIL],
//    DCDA: [DCDA, DADA, DAAA, DAAE, ELRL],
//    dBDN: [dBDN, dADN, dAAN, RAIL],
//    dCDA: [dCDA, dADA, dAAA, dAAE, ELRL],
//    CBDN: [CBDN, CADN, CAAN, RAIL],
//    CCDA: [CCDA, CADA, CAAA, CAAE, ELRL],
//    cACN: [cACN, cAAN, NGRL],
//    LACN: [LACN, LAAN, MGLV],
}
cargotable {
    PASS, COAL, MAIL, OIL_, LVST, GOOD, GRAI, WOOD, 
    IORE, STEL, VALU, PAPR, WHEA, FOOD, GOLD, RUBR, 
    FRUT, MAIZ, CORE, WATR, DIAM, SUGR, TOYS, BATT, 
    SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, 
    BDMT, BEAN, BEER, BOOM, BRCK, CBLK, CERA, CERE, 
    CLAY, CMNT, COPR, CSTI, CTAR, DYES, ENSP, FECR, 
    FERT, FICR, FISH, FMSP, GLAS, GRVL, JAVA, KAOL, 
    LIME, MILK, OLSD, PEAT, PETR, PHOS, PLAS, PORE, 
    POTA, RFPR, SAND, SCMT, SULP, TOUR, TYRE, URAN, 
    VEHI, WDPR, WOOL, ZINC, ACID, ALUM, BAKE, CASS, 
    CHLO, CHSE, CIGR, COAT, COBL, COKE, ELTR, EOIL, 
    FRVG, FUEL, FURN, IRON, LYE_, MEAT, METL, MNO2, 
    MNSP, MOLS, MPTS, NH3_, NUTS, NICK, NITR, NKOR, 
    NUKF, NUKW, OILI, OILD, OTI1, OTI2, OYST, O2__, 
    PCL_, PIPE, POWR, QLME, RCYC, SALT, SASH, SEED, 
    SESP, SGBT, SGCN, SLAG, SOAP, STAL, STCB, STSE, 
    STSH, STST, STWR, TATO, TEXT, TBCO, TWOD, VBOD, 
    VENG, VPTS, WSTE, YETI, YETY, RSGR, SCRP, ALO_,
    COCO, FOCA, PPAR, NHNO, C2H4, H2__, N7__       // This line is copied from xUSSR, I am not sure what they acctually are.
}

//This file sets all vehicle IDs. Each type has a range of 32/64/128/256/512/768/1024 possible IDs.

//Steam Locomotive, available ID range: 512-767 (hex 0x0200..0x02FF)
//define id_range_steam_locomotive 0x0200..0x02FF

//Narrow Guage Steam Locomotive, available ID range: 768-895 (hex 0x0300..0x037F)
//define id_range_narrow_guage_steam_locomotive 0x0300..0x037F

//Diesel Locomotive, available ID range: 896-959 (hex 0x0380..0x03BF)
//define id_range_diese_locomotive 0x0380..0x03BF

//Electric Locomotive, available ID range: 960-1023 (hex 0x03C0..0x03FF)
//define id_range_electric_locomotive 0x03C0..0x03FF

//Coaches, available ID range: 1024-1535 (hex 0x0400..0x05FF)
//define id_range_coaches 0x0400..0x05FF

//Narrow Guage Coaches, available ID range: 1536-1663 (hex 0x0600..0x067F)
//define id_range_narrow_guage_coaches 0x0600..0x067F

//Wagons, available ID range: 1664-1791 (hex 0x0680..0x06FF)
//define id_range_wagons 0x0680..0x06FF

//Narrow Guage Wagons, available ID range: 1792-1855 (hex 0x0700..0x073F)
//define id_range_narrow_guage_wagons 0x0700..0x073F

//Mutipile-Unit Wagons, available ID range: 1856-1983 (hex 0x0740..0x07BF)
//define id_range_mutipile_unit_wagons 0x0740..0x07BF
item (FEAT_TRAINS, normal_emucoach, 1856) {}
item (FEAT_TRAINS, first_emucoach, 1857) {}
item (FEAT_TRAINS, first_emucoach_with_mailroom, 1858) {}

//25kV AC Electric Mutipile-Unit, available ID range: 1984-2239 (hex 0x07C0..0x08BF)
//define id_range_25kv_emu 0x07C0..0x08BF
item (FEAT_TRAINS, yellowhead_exurb, 1984) {}
item (FEAT_TRAINS, yellowhead_suburb, 1985) {}
item (FEAT_TRAINS, mlr, 1986) {}

//1500V DC Electric Mutipile-Unit, available ID range: 2240-2751 (hex 0x08C0..0x0ABF)
//define id_range_1500v_emu 0x08C0..0x0ABF

//Misc, available ID range: 2240-2751 (hex 0x0AC0..0x0CBF)
//define id_range_misc 0x0AC0..0x0CBF
item (FEAT_TRAINS, yellowhead_mailroom, 2240) {}

/* Begin Functions */
// shamelessly stolen from jp+ shinkansen

switch (FEAT_TRAINS, PARENT, func_is_reversed, vehicle_is_reversed) {return;}

// Running cost factor depending on speed
switch (FEAT_TRAINS, SELF, runningcost60, current_speed) {
    0: return 1;
    1..3: return 2;
    4..6: return 3;
    7..10: return 4;
    return 5;
}
switch (FEAT_TRAINS, SELF, runningcost80, current_speed) {
    0: return 1;
    1..5: return 2;
    6..12: return 3;
    13..20: return 4;
    return 5;
}
switch (FEAT_TRAINS, SELF, runningcost120, current_speed) {
    0: return 1;
    1..8: return 2;
    9..19: return 3;
    20..30: return 4;
    return 5;
}
switch (FEAT_TRAINS, SELF, runningcost160, current_speed) {
    0: return 1;
    1..12: return 2;
    13..26: return 3;
    27..40: return 4;
    return 5;
}
switch (FEAT_TRAINS, SELF, runningcost200, current_speed) {
    0: return 1;
    1..15: return 2;
    16..32: return 3;
    33..50: return 4;
    return 5;
}
switch (FEAT_TRAINS, SELF, runningcost250, current_speed) {
    0: return 1;
    1..18: return 2;
    19..39: return 3;
    40..60: return 4;
    return 5;
}
switch (FEAT_TRAINS, SELF, runningcost280, current_speed) {
    0: return 1;
    1..21: return 2;
    22..45: return 3;
    46..70: return 4;
    return 5;
}
switch (FEAT_TRAINS, SELF, runningcost300, current_speed) {
    0: return 1;
    1..24: return 2;
    25..52: return 3;
    53..80: return 4;
    return 5;
}
switch (FEAT_TRAINS, SELF, runningcost350, current_speed) {
    0: return 1;
    1..27: return 2;
    28..58: return 3;
    59..90: return 4;
    return 5;
}
switch (FEAT_TRAINS, SELF, runningcost400, current_speed) {
    0: return 1;
    1..30: return 2;
    31..65: return 3;
    66..100: return 4;
    return 5;
}

switch (FEAT_TRAINS, SELF, runningcostfactor, max_speed) {
    0..20: runningcost60;                   // < 75 km/h
    21..30: runningcost80;          	    // 75-110 km/h
    31..40: runningcost120; 		       	// 110-145 km/h
    41..50: runningcost160;                 // 145-180 km/h
    51..60: runningcost200;                 // 180-220 km/h
    61..70: runningcost250;                 // 220-255 km/h
    71..80: runningcost280;                 // 255-290 km/h
    81..90: runningcost300;                 // 290-325 km/h
    91..100: runningcost350;                // 325-360 km/h      
    runningcost400;                         // > 360 km/h
}

// For High-Speed Hexie EMUs, speed is limited to 310 km/h IRL, but they can go up to 350 even 380, but with increased running costs
switch (FEAT_TRAINS, SELF, switch_crh_c_cargo_subtype, cargo_subtype) {
    0: return string(STR_310_KMH);
    1: return string(STR_350_KMH);
    return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, switch_crh_c_speed, cargo_subtype) {
    0: return 310;
    return 350;
}

switch (FEAT_TRAINS, SELF, switch_crh380_cargo_subtype, cargo_subtype) {
    0: return string(STR_310_KMH);
    1: return string(STR_350_KMH);
    2: return string(STR_380_KMH);
    return CB_RESULT_NO_TEXT;
}

 //也许可以给动感号用这些东西
switch (FEAT_TRAINS, SELF, switch_crh380_speed, cargo_subtype) {
    0: return 310;
    1: return 350;
    return 380;
}

switch (FEAT_TRAINS, SELF, crh350costpower, vehicle_is_potentially_powered) {
    1: return 10;
    return 4;
}

switch (FEAT_TRAINS, SELF, crh380costpower, vehicle_is_potentially_powered) {
    1: return 25;
    return 10;
}

switch (FEAT_TRAINS, PARENT, crhspeedcost, max_speed) {
    0..87: return 0;
    88..98: crh350costpower;
    crh380costpower; 
}

/*

BITMASK SHEET

bitmask(0): to return error consists
bitmask(1): restaurant car
bitmask(2): air condition generator car
bitmask(3): ////
bitmask(4): brake van

For example, 
bitmask_vehicle_info:           bitmask(1, 3);

*/


// Pushpull trains should have locomotives on their front/end, not middle
switch (FEAT_TRAINS, SELF, switch_pushpull_consist_correction, ((position_in_consist < 3) || (position_in_consist_from_end < 3))) {
    1: return bitmask(2);
    return bitmask(0, 2);
}

// Another running cost factor depending on the existence of restaurant car - changed in v0.0.8 - now halves the runing costs of passenger cars instead of elimination 
switch (FEAT_TRAINS, PARENT, cafecostfactor, hasbit(bitmask_consist_info, 1)) {
    1: return 1;
    return 2;
}

// Running cost factor of AC Generator Cars (and also locomotives able to supply electricity for cars) - added in v0.0.8 - now varies according to the number of cars with need of air condition (including some passenger cars and a few refrigerator wagons)
// The costs are not coded into AC Generator Cars, but into cars with need of AC.
switch (FEAT_TRAINS, PARENT, accostfactor, hasbit(bitmask_consist_info, 2)) {
    1: return 2;
    return 0;
}

// Cargo age period factor depending on Restaurant Car: attaching restaurant car increases cargo age period of medium and long range passenger cars (i.e. not commuter cars) by 1/4
switch (FEAT_TRAINS, PARENT, cafedecayfactor, hasbit(bitmask_consist_info, 1)) {
    1: return 5;
    return 4;
}

// Cargo age period factor depending on Air Conditioner: If the train is not pulled by an locomotive able to supply electricity for cars, nor is there an air condition generator car (bitmask 2), the cargo_age_period of this passenger car reduces by 1/5.
switch (FEAT_TRAINS, PARENT, acdecayfactor, hasbit(bitmask_consist_info, 2)) {
    0: return 4;
    return 5;
}

// Electric Engines MUST BE ELECTRIFIED to supply electricity

switch (FEAT_TRAINS, SELF, airconditioner, vehicle_is_powered) {
    1: return bitmask(2);
    return 0;
}

/* switch (FEAT_TRAINS, SELF, crhwagon, vehicle_type_id) {
    1024..1035: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    return CB_RESULT_ATTACH_DISALLOW;
}


switch (FEAT_TRAINS, SELF, muhead, vehicle_type_id) {
    1024..1051: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    8192..14335: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, SELF, singlemu, vehicle_type_id) {
    1024..1051: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, SELF, locowagon, vehicle_type_id) {
    1024..1051: return CB_RESULT_ATTACH_DISALLOW;
    8192..14335: return CB_RESULT_ATTACH_DISALLOW;
    return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
} */

/* switch (FEAT_TRAINS, SELF, muwagon, vehicle_type_id) {
    1856..2751: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, SELF, muhead_mtr, vehicle_type_id) {
    1856: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    return CB_RESULT_ATTACH_DISALLOW;
} */
//Atention: Different from China Set : Trains, can_attach swiths' name are named by type cars whivh use them 

switch (FEAT_TRAINS, SELF, mu_with_first_class, vehicle_type_id) {
    1856..1859: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    1984: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    1986: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, SELF, mu_of_mtr, vehicle_type_id) {
    1856..2751: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, SELF, muhead_with_first_class, vehicle_type_id) {
    1856..1857: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, SELF, muhead_yellowhead_exurb, vehicle_type_id) {
    1856..1858: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, SELF, muhead_airport_express, vehicle_type_id) {
    1857: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    1859: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, SELF, muhead_without_first_class, vehicle_type_id) {
    1856: return CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
    return CB_RESULT_ATTACH_DISALLOW;
}


switch (FEAT_TRAINS, SELF, switch_visual_effect_and_powered, ((position_in_articulated_veh == 0) && !func_is_reversed()) || ((position_in_articulated_veh_from_end == 0) && func_is_reversed()) ) {
	1: return visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 0, ENABLE_WAGON_POWER);
	return visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}


// MUs need at least 4 cars to start
switch (FEAT_TRAINS, SELF, mu4car, num_vehs_in_consist < 12) {
    1: return string(STR_TOO_SHORT);
    return CB_RESULT_NO_TEXT;
}

// MUs need at least 4 and at most 24 cars to start

switch (FEAT_TRAINS, SELF, mu4to24car, (num_vehs_in_consist < 12) || (num_vehs_in_consist > 72)) {
    1: return string(STR_MUST_BE_4_TO_24_CARS);
    return CB_RESULT_NO_TEXT;
}

// MUs need at least 8 and at most 24 cars to start

switch (FEAT_TRAINS, SELF, mu8to24car, (num_vehs_in_consist < 12) || (num_vehs_in_consist > 72)) {
    1: return string(STR_MUST_BE_8_TO_24_CARS);
    return CB_RESULT_NO_TEXT;
}

// Long MUs need at least 4 cars to start
switch (FEAT_TRAINS, SELF, mu8car, num_vehs_in_consist < 24) {
    1: return string(STR_TOO_SHORT);
    return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, mu481216car, num_vehs_in_consist) {
    12: return CB_RESULT_NO_TEXT;
    24: return CB_RESULT_NO_TEXT;
    36: return CB_RESULT_NO_TEXT;
    48: return CB_RESULT_NO_TEXT;
    return string(STR_MUST_BE_4_8_12_16_CARS);
}

switch (FEAT_TRAINS, SELF, mu3multicar, num_vehs_in_consist) {
    9: return CB_RESULT_NO_TEXT;
    18: return CB_RESULT_NO_TEXT;
    27: return CB_RESULT_NO_TEXT;
    36: return CB_RESULT_NO_TEXT;
    45: return CB_RESULT_NO_TEXT;
    54: return CB_RESULT_NO_TEXT;
    return string(STR_MUST_BE_3MULTI_CARS);
}

switch (FEAT_TRAINS, SELF, mu5to17car, num_vehs_in_consist) {
    15..51: return CB_RESULT_NO_TEXT;
    return string(STR_MUST_BE_5_TO_17_CARS);
}

/* LENGTHS */

// Standard 2-8-2 Length
    switch (FEAT_TRAINS, SELF, switch_length_2_8_2, position_in_articulated_veh % 3) {
        1: return 8;
        return 2;
    }

// Standard 2-7-2 Length
    switch (FEAT_TRAINS, SELF, switch_length_2_7_2, position_in_articulated_veh % 3) {
        1: return 7;
        return 2;
    }

// Standard 2-6-2 Length
    switch (FEAT_TRAINS, SELF, switch_length_2_6_2, position_in_articulated_veh % 3) {
        1: return 6;
        return 2;
    }

// Standard 2-5-2 Length
    switch (FEAT_TRAINS, SELF, switch_length_2_5_2, position_in_articulated_veh % 3) {
        1: return 5;
        return 2;
    }

// Standard 2-4-2 Length
    switch (FEAT_TRAINS, SELF, switch_length_2_4_2, position_in_articulated_veh % 3) {
        1: return 4;
        return 2;
    }

// Standard 2-3-2 Length
    switch (FEAT_TRAINS, SELF, switch_length_2_3_2, position_in_articulated_veh % 3) {
        1: return 3;
        return 2;
    }
    
// Standard 2-2-2 Length
    switch (FEAT_TRAINS, SELF, switch_length_2_2_2, position_in_articulated_veh % 3) {
        1: return 2;
        return 2;
    }
/* End Functions */ 

//the train is too long
switch (FEAT_TRAINS, SELF, too_many_graphics_12, position_in_articulated_veh % 3) {
    1: spriteset_too_many_12;
    empty_sprites;
}





item(FEAT_TRAINS, yellowhead_mailroom) {
    property {

        introduction_date:              date(1,1,1);
        model_life:                     VEHICLE_NEVER_EXPIRES;
        vehicle_life:                   255;
        loading_speed:                  24 << param_loading_speed;
        misc_flags:                     bitmask(TRAIN_FLAG_AUTOREFIT);
        cost_factor:                    0;
        running_cost_factor:            0;
        speed:                          0 km/h;
        power:                          0 hpM;
        cargo_capacity:                 24;
        weight:                         0 ton;
        tractive_effort_coefficient:    0;
        air_drag_coefficient:           0;

        reliability_decay:              10;
        refittable_cargo_classes:       bitmask(CC_MAIL, CC_EXPRESS);
        cargo_allow_refit:              [MAIL, VALU, GOLD, DIAM];
        cargo_disallow_refit:           [];
        cargo_age_period:               200;
        refit_cost:                     0;
        default_cargo_type:             MAIL;
        track_type:                     SAAN;
        ai_special_flag:                0;
        running_cost_base:              RUNNING_COST_ELECTRIC;
        engine_class:                   ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:      visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 0, DISABLE_WAGON_POWER);

        climates_available:             NO_CLIMATE;
        retire_early:                   0;
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        length:                         2;
        extra_power_per_wagon:          0;
        bitmask_vehicle_info:           0;
 }
    graphics {
        cargo_capacity:                 24;
        purchase_cargo_capacity:        24;
        default:                        empty_sprites;
    }
}
/* Begin Functions Again */


/* switch (FEAT_TRAINS, SELF, switch_crh_wagon_articulated_part, vehicle_type_id) {
    1024: switch_zemuw_articulated_part;
    1025: switch_zymuw_articulated_part;
    1027: switch_zsmuw_articulated_part;
    1028: switch_swmuw_articulated_part;
    1035: switch_zecmuw_articulated_part;
    return;
}

switch (FEAT_TRAINS, SELF, switch_crh_wagon_cargo_decay, vehicle_type_id) {
    1024: return 12 * 5;
    1025: return 20 * 5;
    1027: return 32 * 5;
    1028: return 36 * 5;
    1035: return 12 * 5;
    return;
}

switch (FEAT_TRAINS, SELF, switch_crh_wagon_bitmask, vehicle_type_id) {
    1035: return bitmask(1);
    return 0;
}

 */


 // Purchase Menu off MU Cars
spriteset (spriteset_mtruw_purchase_original) {
    template_purchase_empty ()
}
alternative_sprites(spriteset_mtruw_purchase_original, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_purchase ("emucoach", "3049stock-tp")
}

spriteset (spriteset_mtruw_original) {
    template_empty ()
}
alternative_sprites(spriteset_mtruw_original, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("emucoach", "3049stock-tp")
}

spriteset (spriteset_mtruw_1c_purchase_original) {
    template_purchase_empty ()
}
alternative_sprites(spriteset_mtruw_1c_purchase_original, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_purchase ("emucoach", "3049stock-1c-tp")
}

spriteset (spriteset_mtruw_1c_original) {
    template_empty ()
}
alternative_sprites(spriteset_mtruw_1c_original, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("emucoach", "3049stock-1c-tp")
}

switch (FEAT_TRAINS, SELF, switch_mtruw_1c_original, position_in_consist % 3) {
    1: spriteset_mtruw_1c_original;
    empty_sprites;
} 

switch (FEAT_TRAINS, SELF, switch_mtruw_1c_purchase_original, position_in_consist % 3) {
    1: spriteset_mtruw_1c_purchase_original;
    empty_sprites;
} 

switch (FEAT_TRAINS, SELF, switch_mtruw_original, position_in_consist % 3) {
    1: spriteset_mtruw_original;
    empty_sprites;
} 

switch (FEAT_TRAINS, SELF, switch_mtruw_purchase_original, position_in_consist % 3) {
    1: spriteset_mtruw_purchase_original;
    empty_sprites;
} 


//Sprite of 1st Class car with Luggage Room
spriteset (spriteset_mtruw_1c_purchase_original_withmail) {
    template_purchase_empty ()
}
alternative_sprites(spriteset_mtruw_1c_purchase_original_withmail, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_purchase ("emucoach", "3049stock-1c-tp")
}
spriteset (spriteset_mtruw_1c_original_withmail) {
    template_empty ()
}
alternative_sprites(spriteset_mtruw_1c_original_withmail, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("emucoach", "3049stock-1c-tp")
}

switch (FEAT_TRAINS, SELF, switch_mtruw_1c_purchase_original_withmail, position_in_consist % 3) {
    1: spriteset_mtruw_1c_purchase_original_withmail;
    empty_sprites;
} 
switch (FEAT_TRAINS, SELF, switch_mtruw_1c_original_withmail, position_in_consist % 3) {
    1: spriteset_mtruw_1c_original_withmail;
    empty_sprites;
} 

/* switch (FEAT_TRAINS, SELF, switch_mtrmuw_graphics, position_in_articulated_veh % 3) {
    1: spriteset_mtruw_original;
    empty_sprites;   
} */
/* switch (FEAT_TRAINS, SELF, switch_first_emucoach_articulated_part_no_mailroom, extra_callback_info1) {
    1..2: return first_emucoach;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}
 */
switch (FEAT_TRAINS, SELF, switch_first_emucoach_articulated_part_with_mailroom, extra_callback_info1) {
    1: return first_emucoach_with_mailroom;
    2: return yellowhead_mailroom;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


 switch (FEAT_TRAINS, SELF, switch_first_emucoach_articulated_part, extra_callback_info1) {
    1..2: return first_emucoach;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

/* switch (FEAT_TRAINS, SELF, switch_first_emucoach_articulated_part, hasbit(bitmask_consist_info, 3)) {
    0: switch_first_emucoach_articulated_part_no_mailroom;
    switch_first_emucoach_articulated_part_with_mailroom;
} */


switch (FEAT_TRAINS, SELF, switch_normal_emucoach_articulated_part, extra_callback_info1) {
    1..2: return normal_emucoach;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, switch_mtr_wagon_articulated_part, vehicle_type_id) {
    1856: switch_normal_emucoach_articulated_part;
    1857: switch_first_emucoach_articulated_part;
    1858: switch_first_emucoach_articulated_part_with_mailroom;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


//

// Begin FIRST_EMUCOACH

// Graphics


// Vehicle




switch (FEAT_TRAINS, SELF, switch_first_emucoach_capacity, position_in_articulated_veh % 3) {
    1: return 0;
    return 0;
}


item (FEAT_TRAINS, first_emucoach) {
    property {
        // Menu
        name:                           string(STR_NAME_FIRST_EMUCOACH);
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        misc_flags:                     bitmask(TRAIN_FLAG_AUTOREFIT);
        variant_group:                  1856;

        // Availability
        climates_available:             ALL_CLIMATES;
        introduction_date:              date(1980,01,01);
        model_life:                     VEHICLE_NEVER_EXPIRES;
        vehicle_life:                   30;
        track_type:                     SAAN;

        // Cargo
        refittable_cargo_classes:       bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes:   0;
        cargo_allow_refit:              [PASS, TOUR, YETI, YETY];
        cargo_disallow_refit:           [];
        refit_cost:                     0;
        default_cargo_type:             PASS;
        ai_special_flag:                AI_FLAG_PASSENGER;
        cargo_capacity:                 72;                         //depending on the mu
        loading_speed:                  8 << param_loading_speed;   
        cargo_age_period:               240 << param_cargo_decay;

        // Stats
        speed:                          0 km/h;                 //depending on the mu
        power:                          0 hp;                   //depending on the mu
        weight:                         50 ton;                 //depending on the mu
        cost_factor:                    24;                     
        running_cost_base:              RUNNING_COST_ELECTRIC;  
        running_cost_factor:            6;                      //depending on the mu
    }
    graphics {
        // Menu
        additional_text:                string(STR_DESC_3, string(STR_ATTACH_MTR_FIRST_EMU), string(STR_COMFORT_MEDIUM, 240));
        can_attach_wagon:               mu_with_first_class;

        // Graphics
        default:                        switch_mtruw_1c_original;
        purchase:                       switch_mtruw_1c_purchase_original;
        articulated_part:               switch_first_emucoach_articulated_part;
        // Stats
        length:                         switch_length_2_8_2;
        cargo_capacity:                 switch_first_emucoach_capacity;
        cargo_age_period:               (12 * 5 * cafedecayfactor()) << param_cargo_decay;
        cost_factor:                    24;
        running_cost_factor:            6 * runningcostfactor() * cafecostfactor() + accostfactor();
        purchase_running_cost_factor:   36;
        purchase_cargo_capacity:        90/3;
    }
}

item (FEAT_TRAINS, first_emucoach_with_mailroom) {
    property {
        // Menu
        name:                           string(STR_NAME_FIRST_EMUCOACH_WITH_MAILROOM);
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        misc_flags:                     bitmask(TRAIN_FLAG_AUTOREFIT);
        variant_group:                  1856;

        // Availability
        climates_available:             ALL_CLIMATES;
        introduction_date:              date(1980,01,01);
        model_life:                     VEHICLE_NEVER_EXPIRES;
        vehicle_life:                   30;
        track_type:                     SAAN;

        // Cargo
        refittable_cargo_classes:       bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes:   0;
        cargo_allow_refit:              [PASS, TOUR, YETI, YETY];
        cargo_disallow_refit:           [];
        refit_cost:                     0;
        default_cargo_type:             PASS;
        ai_special_flag:                AI_FLAG_PASSENGER;
        cargo_capacity:                 72;                         //depending on the mu
        loading_speed:                  8 << param_loading_speed;   
        cargo_age_period:               240 << param_cargo_decay;

        // Stats
        speed:                          0 km/h;                 //depending on the mu
        power:                          0 hp;                   //depending on the mu
        weight:                         50 ton;                 //depending on the mu
        cost_factor:                    24;                     
        running_cost_base:              RUNNING_COST_ELECTRIC;  
        running_cost_factor:            6;                      //depending on the mu
    }
    graphics {
        // Menu
        additional_text:                string(STR_DESC_2, string(STR_ATTACH_MTR_FIRST_EMU_WUTH_MAILROOM), string(STR_WITH_MAILROOM), string(STR_COMFORT_MEDIUM, 240), string(STR_FRESHNESS_MEDIUM));
        can_attach_wagon:               mu_with_first_class;

        // Graphics
        default:                        switch_mtruw_1c_original_withmail;
        purchase:                       switch_mtruw_1c_purchase_original_withmail;
        articulated_part:               switch_first_emucoach_articulated_part_with_mailroom;
        // Stats
        length:                         switch_length_2_7_2;
        cargo_capacity:                 switch_first_emucoach_capacity;
        cargo_age_period:               (12 * 5 * cafedecayfactor()) << param_cargo_decay;
        cost_factor:                    24;
        running_cost_factor:            6 * runningcostfactor() * cafecostfactor() + accostfactor();
        purchase_running_cost_factor:   36;
        purchase_cargo_capacity:        90/3;
    }
}

// End FIRST_EMUCOACH


// Begin NORMAL_EMUCOACH

// Graphics


// Vehicle



switch (FEAT_TRAINS, SELF, switch_normal_emucoach_capacity, position_in_articulated_veh % 3) {
    1: return 0;
    return 0;
}


item (FEAT_TRAINS, normal_emucoach) {
    property {
        // Menu
        name:                           string(STR_NAME_NORMAL_EMUCOACH);
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        misc_flags:                     bitmask(TRAIN_FLAG_AUTOREFIT);
        
        // Availability
        climates_available:             ALL_CLIMATES;
        introduction_date:              date(1980,01,01);
        model_life:                     VEHICLE_NEVER_EXPIRES;
        vehicle_life:                   30;
        track_type:                     SAAN;

        // Cargo
        refittable_cargo_classes:       bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes:   0;
        cargo_allow_refit:              [PASS, TOUR, YETI, YETY];
        cargo_disallow_refit:           [];
        refit_cost:                     0;
        default_cargo_type:             PASS;
        ai_special_flag:                AI_FLAG_PASSENGER;
        cargo_capacity:                 218;                         //depending on the mu
        loading_speed:                  8 << param_loading_speed;   
        cargo_age_period:               240 << param_cargo_decay;

        // Stats
        speed:                          0 km/h;                 //depending on the mu
        power:                          0 hp;                   //depending on the mu
        weight:                         50 ton;                 //depending on the mu
        cost_factor:                    24;                     
        running_cost_base:              RUNNING_COST_ELECTRIC;  
        running_cost_factor:            6;                      //depending on the mu
    }
    graphics {
        // Menu
        additional_text:                string(STR_DESC_2, string(STR_ATTACH_MTR_EMU), string(STR_COMFORT_LOW, 140));
        can_attach_wagon:               mu_of_mtr;

        // Graphics
        default:                        switch_mtruw_original;
        purchase:                       switch_mtruw_purchase_original;
        articulated_part:               switch_normal_emucoach_articulated_part;
        // Stats
        length:                         switch_length_2_8_2;
        cargo_capacity:                 switch_normal_emucoach_capacity;
        cargo_age_period:               (7 * 5 * cafedecayfactor()) << param_cargo_decay;
        cost_factor:                    24;
        running_cost_factor:            6 * runningcostfactor() * cafecostfactor() + accostfactor();
        purchase_running_cost_factor:   36;
        purchase_cargo_capacity:        333/3;
    }
}

// End NORMAL_EMUCOACH


//Main of YellowHead Train
// Vehicle
spriteset (spriteset_yellowhead_c) {
    template_empty ()
}
spriteset (spriteset_yellowhead_m) {
    template_empty ()
}
spriteset (spriteset_yellowhead_c_reversed) {
    template_empty ()
}
spriteset (spriteset_yellowhead_1c_c) {
    template_empty ()
}
spriteset (spriteset_yellowhead_1c_m) {
    template_empty ()
}
spriteset (spriteset_yellowhead_1c_c_reversed) {
    template_empty ()
}


alternative_sprites (spriteset_yellowhead_c, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/yellowhead", "3049stock-c")
}
alternative_sprites (spriteset_yellowhead_m, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/yellowhead", "3049stock-tp") 
}
alternative_sprites (spriteset_yellowhead_c_reversed, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/yellowhead", "3049stock-c-r")
}
alternative_sprites (spriteset_yellowhead_1c_c, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/yellowhead", "3049stock-1c-c")
}
alternative_sprites (spriteset_yellowhead_1c_m, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/yellowhead", "3049stock-1c-tp")
}
alternative_sprites (spriteset_yellowhead_1c_c_reversed, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/yellowhead", "3049stock-1c-c-r")
}


//Graphics
switch (FEAT_TRAINS, SELF, switch_yellowhead_first_wagon, position_in_consist % 9) {
    1: spriteset_yellowhead_1c_c;
    4: spriteset_yellowhead_1c_m;
    7: spriteset_yellowhead_1c_c_reversed;
    empty_sprites;
} 

switch (FEAT_TRAINS, SELF, switch_yellowhead_normal_wagon, position_in_consist % 9) {
    1: spriteset_yellowhead_c;
    4: spriteset_yellowhead_m;
    7: spriteset_yellowhead_c_reversed;
    empty_sprites;
} 

switch (FEAT_TRAINS, SELF, switch_yellowhead_wagon_type, vehicle_type_id) {
    1856: switch_yellowhead_normal_wagon;
    1857..1858: switch_yellowhead_first_wagon;
    empty_sprites;
} 

switch (FEAT_TRAINS, SELF, switch_yellowhead_graphics, (position_in_consist_from_end % 3) == 1) {
    1: switch_yellowhead_wagon_type;
    empty_sprites;
} 

//Weight

switch (FEAT_TRAINS, SELF, switch_yellowhead_weight, num_vehs_in_consist % 9) {
    0..2: return 32;
    6..8: return 32;
    3..5: return 52;
    return 0;
}

//Capacity




switch (FEAT_TRAINS, SELF, switch_yellowhead_capacity_1, param_cargo_capacity) {
    0: return 109;
    1: return 164;
    3: return 273;
    4: return 327;
    5: return 436;
    return 218;
}
switch (FEAT_TRAINS, SELF, switch_yellowhead_capacity, position_in_consist % 3) {
    1: switch_yellowhead_capacity_1;
    return 0;
}

//Cost


switch (FEAT_TRAINS, SELF, switch_yellowhead_running_power, vehicle_type_id) {
    1856: return 32;
    1857: return 36;
    return 0;
}


switch (FEAT_TRAINS, SELF, switch_yellowhead_running_unpower, vehicle_type_id) {
    1856: return 10;
    1857: return 12;
    return 0;
}


switch (FEAT_TRAINS, SELF, switch_yellowhead_running, vehicle_is_potentially_powered) {
    1: switch_yellowhead_running_power;
    switch_yellowhead_running_unpower;
}

//Power

switch (FEAT_TRAINS, SELF, switch_yellowhead_power, position_in_consist % 9) {
    3..5: return 1218;
    6..8: return 0;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_yellowhead_traction, vehicle_is_potentially_powered) {
    1: return int(0.171*255);
    return 0;
}
// Begin YELLOWHEAD_EXURB
// Purchase Menu
spriteset (spriteset_yellowhead_exurb_purchase_original) {
    template_purchase_empty ()
}
alternative_sprites(spriteset_yellowhead_exurb_purchase_original, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_purchase ("25kvemu/yellowhead", "3049stock-1c-c")
}


switch (FEAT_TRAINS, SELF, switch_yellowhead_exurb_purchase_original, position_in_consist % 3) {
    1: spriteset_yellowhead_exurb_purchase_original;
    empty_sprites;
} 

// Graphics


switch (FEAT_TRAINS, SELF, switch_yellowhead_exurb_articulated_part, extra_callback_info1) {
    1: return yellowhead_exurb;
    2: return yellowhead_mailroom;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


//Capacity
switch (FEAT_TRAINS, SELF, switch_yellowhead_1c_capacity, position_in_consist % 3) {
    1: return 56;
    2: return 24;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_yellowhead_1c_without_mailroom_capacity, position_in_consist % 3) {
    1: return 64;
    return 0;
}





item (FEAT_TRAINS, yellowhead_exurb) {
    property {
        // Menu
        name:                           string(STR_NAME_YELLOWHEAD_EXURB);
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        misc_flags:                     bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_MU);
        engine_class:                   ENGINE_CLASS_ELECTRIC;
        
        // Availability
        climates_available:             ALL_CLIMATES;
        introduction_date:              date(1981,04,01);
        model_life:                     60;
        retire_early:                   45;
        vehicle_life:                   35;
        track_type:                     SACA;

        // Cargo
        refittable_cargo_classes:       bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes:   0;
        cargo_allow_refit:              [PASS, TOUR, YETI, YETY];
        cargo_disallow_refit:           [];
        refit_cost:                     0;
        default_cargo_type:             PASS;
        ai_special_flag:                AI_FLAG_PASSENGER;
        cargo_capacity:                 1;
        loading_speed:                  24 << param_loading_speed;
        cargo_age_period:               240 << param_cargo_decay;

        // Stats
        speed:                          120 km/h;
        power:                          908 kW;
        weight:                         32 ton;
        tractive_effort_coefficient:    0.171;
        cost_factor:                    40;
        running_cost_base:              RUNNING_COST_ELECTRIC;
        running_cost_factor:            10;
        reliability_decay:              10;
        bitmask_vehicle_info:           bitmask(2);
    }
    graphics {
        // Menu
        additional_text:                string(STR_DESC_6, string(STR_ELECTRIC_25KVAC), string(STR_MTR_FIRST_CAN_ATTACH_WAGON), string(STR_NICKNAME_YELLOWHEAD),string(STR_RELDEC_LOW, 10), string(STR_FIRST_HEAD_SEAT));
        can_attach_wagon:               muhead_yellowhead_exurb;
        start_stop:                     mu3multicar;

        // Graphics
        default:                        switch_yellowhead_first_wagon;
        purchase:                       switch_yellowhead_exurb_purchase_original;
        articulated_part:               switch_yellowhead_exurb_articulated_part;

        // Stats
        length:                         switch_length_2_7_2;
        speed:                          120;
        power:                          return 0;
        purchase_power:                 return 1218; // HP
        tractive_effort_coefficient:    return 0;
        purchase_tractive_effort_coefficient: return int(0.171*255);
        cargo_capacity:                 switch_yellowhead_1c_capacity;
        cargo_age_period:               240 << param_cargo_decay;
        cost_factor:                    40;
        running_cost_factor:            10  * runningcostfactor() + 20;
        purchase_running_cost_factor:   60;
        purchase_cargo_capacity:        56/2;
        bitmask_vehicle_info:           bitmask(2);
    }

    // Multiple Unit Wagons
    livery_override(normal_emucoach) {
        default:                        switch_yellowhead_graphics;
        cargo_capacity:                 switch_yellowhead_capacity;
        power:                          switch_yellowhead_power;
        tractive_effort_coefficient:    switch_yellowhead_traction;
        length:                         switch_length_2_7_2;
        weight:                         switch_yellowhead_weight;
        can_attach_wagon:               mu_of_mtr;
        cargo_age_period:               160 << param_cargo_decay;
        bitmask_vehicle_info:           0;
        articulated_part:               switch_mtr_wagon_articulated_part;
        cost_factor:                    60;
        running_cost_factor:            switch_yellowhead_running() * runningcostfactor() + accostfactor();
    }
    livery_override(first_emucoach) {
        default:                        switch_yellowhead_graphics;
        cargo_capacity:                 switch_yellowhead_1c_without_mailroom_capacity;
        power:                          switch_yellowhead_power;
        tractive_effort_coefficient:    switch_yellowhead_traction;
        length:                         switch_length_2_7_2;
        weight:                         switch_yellowhead_weight;
        can_attach_wagon:               mu_with_first_class;
        cargo_age_period:               240 << param_cargo_decay;
        bitmask_vehicle_info:           0;
        articulated_part:               switch_mtr_wagon_articulated_part;
        cost_factor:                    60;
        running_cost_factor:            switch_yellowhead_running() * runningcostfactor() + accostfactor();
    }
    livery_override(first_emucoach_with_mailroom) {
        default:                        switch_yellowhead_graphics;
        cargo_capacity:                 switch_yellowhead_1c_capacity;
        power:                          switch_yellowhead_power;
        tractive_effort_coefficient:    switch_yellowhead_traction;
        length:                         switch_length_2_7_2;
        weight:                         switch_yellowhead_weight;
        can_attach_wagon:               mu_with_first_class;
        cargo_age_period:               240 << param_cargo_decay;
        bitmask_vehicle_info:           0;
        articulated_part:               switch_mtr_wagon_articulated_part;
        cost_factor:                    60;
        running_cost_factor:            switch_yellowhead_running() * runningcostfactor() + accostfactor();
    }
}

// End YELLOWHEAD_EXURB


// Begin YELLOWHEAD_SUBURB
// Purchase Menu
spriteset (spriteset_yellowhead_suburb_purchase_original) {
    template_purchase_empty ()
}
alternative_sprites(spriteset_yellowhead_suburb_purchase_original, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_purchase ("25kvemu/yellowhead", "3049stock-c")
}


switch (FEAT_TRAINS, SELF, switch_yellowhead_suburb_purchase_original, position_in_consist % 3) {
    1: spriteset_yellowhead_suburb_purchase_original;
    empty_sprites;
} 

// Graphics


switch (FEAT_TRAINS, SELF, switch_yellowhead_suburb_articulated_part, extra_callback_info1) {
    1..2: return yellowhead_suburb;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}



//Text

switch (FEAT_TRAINS, SELF, switch_yellowhead_suburb_additional_text, param_cargo_decay) {
    return string(STR_DESC_6, string(STR_ELECTRIC_25KVAC), string(STR_MTR_FIRST_CAN_ATTACH_WAGON), string(STR_NICKNAME_YELLOWHEAD),string(STR_RELIABILITY_10), string(STR_NORMAL_HEAD_SEAT));
}

item (FEAT_TRAINS, yellowhead_suburb) {
    property {
        // Menu
        name:                           string(STR_NAME_YELLOWHEAD_SUBURB);
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        misc_flags:                     bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_MU);
        engine_class:                   ENGINE_CLASS_ELECTRIC;
        variant_group:                  1984;

        // Availability
        climates_available:             ALL_CLIMATES;
        introduction_date:              date(1981,04,01);
        model_life:                     60;
        retire_early:                   45;
        vehicle_life:                   35;
        track_type:                     SACA;

        // Cargo
        refittable_cargo_classes:       bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes:   0;
        cargo_allow_refit:              [PASS, TOUR, YETI, YETY];
        cargo_disallow_refit:           [];
        refit_cost:                     0;
        default_cargo_type:             PASS;
        ai_special_flag:                AI_FLAG_PASSENGER;
        cargo_capacity:                 1;
        loading_speed:                  24 << param_loading_speed;
        cargo_age_period:               160 << param_cargo_decay;

        // Stats
        speed:                          120 km/h;
        power:                          908 kW;
        weight:                         32 ton;
        tractive_effort_coefficient:    0.171;
        cost_factor:                    40;
        running_cost_base:              RUNNING_COST_ELECTRIC;
        running_cost_factor:            10;
        reliability_decay:              10;
        bitmask_vehicle_info:           bitmask(2);
    }
    graphics {
        // Menu
        additional_text:                string(STR_DESC_6, string(STR_ELECTRIC_25KVAC), string(STR_MTR_FIRST_CAN_ATTACH_WAGON), string(STR_NICKNAME_YELLOWHEAD),string(STR_RELDEC_LOW, 10), string(STR_NORMAL_HEAD_SEAT));
        can_attach_wagon:               muhead_without_first_class;
        start_stop:                     mu3multicar;

        // Graphics
        default:                        switch_yellowhead_normal_wagon;
        purchase:                       switch_yellowhead_suburb_purchase_original;
        articulated_part:               switch_yellowhead_suburb_articulated_part;

        // Stats
        length:                         switch_length_2_7_2;
        speed:                          120;
        power:                          return 0;
        purchase_power:                 return 1218; // HP
        tractive_effort_coefficient:    return 0;
        purchase_tractive_effort_coefficient: return int(0.171*255);
        cargo_capacity:                 switch_yellowhead_capacity;
        cargo_age_period:               160 << param_cargo_decay;
        cost_factor:                    40;
        running_cost_factor:            10  * runningcostfactor() + 20;
        purchase_running_cost_factor:   60;
        purchase_cargo_capacity:        218/3;
    }

    // Multiple Unit Wagons
    livery_override(normal_emucoach) {
        default:                        switch_yellowhead_graphics;
        cargo_capacity:                 switch_yellowhead_capacity;
        power:                          switch_yellowhead_power;
        tractive_effort_coefficient:    switch_yellowhead_traction;
        length:                         switch_length_2_7_2;
        weight:                         switch_yellowhead_weight;
        can_attach_wagon:               mu_of_mtr;
        cargo_age_period:               160 << param_cargo_decay;
        bitmask_vehicle_info:           0;
        articulated_part:               switch_mtr_wagon_articulated_part;
        cost_factor:                    60;
        running_cost_factor:            switch_yellowhead_running() * runningcostfactor() + accostfactor();
    }
}

// End YELLOWHEAD_SUBURB


// Begin MLR
// Vehicle
spriteset (spriteset_mlr_c_a) {
    template_empty ()
}
spriteset (spriteset_mlr_c_b) {
    template_empty ()
}
spriteset (spriteset_mlr_t) {
    template_empty ()
}
spriteset (spriteset_mlr_tp) {
    template_empty ()
}
spriteset (spriteset_mlr_tp_r) {
    template_empty ()
}
spriteset (spriteset_mlr_1c_c_b) {
    template_empty ()
}
spriteset (spriteset_mlr_1c_t) {
    template_empty ()
}
spriteset (spriteset_mlr_1c_tp) {
    template_empty ()
}
spriteset (spriteset_mlr_1c_tp_r) {
    template_empty ()
}


alternative_sprites (spriteset_mlr_c_a, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/mlr", "mlr-c-a")
}
alternative_sprites (spriteset_mlr_c_b, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/mlr", "mlr-c-b")
}
alternative_sprites (spriteset_mlr_t, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/mlr", "mlr-t")
}
alternative_sprites (spriteset_mlr_tp, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/mlr", "mlr-tp")
}
/* alternative_sprites (spriteset_mlr_tp-r, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/mlr", "mlr-tp-r")
} */
alternative_sprites (spriteset_mlr_1c_c_b, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/mlr", "mlr-1c-c-b")
}
alternative_sprites (spriteset_mlr_1c_t, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/mlr", "mlr-1c-t")
}
alternative_sprites (spriteset_mlr_1c_tp, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/mlr", "mlr-1c-tp")
}
/* alternative_sprites (spriteset_mlr_1c_tp-r, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_standard ("25kvemu/mlr", "mlr-tp-1c-r")
}
 */
// Purchase Menu
spriteset (spriteset_mlr_purchase_original) {
    template_purchase_empty ()
}
alternative_sprites(spriteset_mlr_purchase_original, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_purchase ("25kvemu/mlr", "mlr-c-a")
}


switch (FEAT_TRAINS, SELF, switch_mlr_purchase_original, position_in_consist % 3) {
    1: spriteset_mlr_purchase_original;
    empty_sprites;
} 


//Graphics
switch (FEAT_TRAINS, SELF, switch_mlr_first_wagon, position_in_consist % 9) {
    4: spriteset_mlr_1c_tp;
    spriteset_mlr_1c_t;
} 

switch (FEAT_TRAINS, SELF, switch_mlr_normal_wagon, position_in_consist % 9) {
    4: spriteset_mlr_tp;
    spriteset_mlr_t;
} 

switch (FEAT_TRAINS, SELF, switch_mlr_wagon_type, vehicle_type_id) {
    1856: switch_mlr_normal_wagon;
    1857: switch_mlr_first_wagon;
    empty_sprites;
} 

switch (FEAT_TRAINS, SELF, switch_mlr_wagon_type_end, vehicle_type_id) {
    1856: spriteset_mlr_c_b;
    1857: spriteset_mlr_1c_c_b;
    empty_sprites;
} 

switch (FEAT_TRAINS, SELF, switch_mlr_graphics_if_end, position_in_consist_from_end  == 1) {
    1: switch_mlr_wagon_type_end;
    switch_mlr_wagon_type;
} 

switch (FEAT_TRAINS, SELF, switch_mlr_middle_wagon_graphics, (position_in_consist % 3) == 1) {
    1: switch_mlr_graphics_if_end;
    empty_sprites;
} 

switch (FEAT_TRAINS, SELF, switch_mlr_graphics, position_in_consist % 3) {
    1: spriteset_mlr_c_a;
    empty_sprites;
} 


//Weight

/* switch (FEAT_TRAINS, SELF, switch_mlr_weight, num_vehs_in_consist % 18) {
    0..2: return 32;
    6..11: return 32;
    15..17: return 32;
    3..5: return 52;
    12..14: return 52;
    return 0;
}
 */
//Capacity




switch (FEAT_TRAINS, SELF, switch_mlr_capacity_1, param_cargo_capacity) {
    0: return 166;
    1: return 249;
    3: return 273;
    4: return 498;
    5: return 664;
    return 332;
}
switch (FEAT_TRAINS, SELF, switch_mlr_capacity, position_in_consist % 3) {
    1: switch_mlr_capacity_1;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_mlr_1c_capacity, position_in_consist % 3) {
    1: return 72;
    return 0;
}
//Cost

/* 
switch (FEAT_TRAINS, SELF, switch_yellowhead_running_power, vehicle_type_id) {
    1856: return 32;
    1857: return 36;
    return 0;
}


switch (FEAT_TRAINS, SELF, switch_yellowhead_running_unpower, vehicle_type_id) {
    1856: return 10;
    1857: return 12;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_yellowhead_cost, vehicle_is_potentially_powered) {
    1: switch_yellowhead_cost_power;
    switch_yellowhead_cost_unpower;
}

switch (FEAT_TRAINS, SELF, switch_yellowhead_running, vehicle_is_potentially_powered) {
    1: switch_yellowhead_running_power;
    switch_yellowhead_running_unpower;
}
 */
//Power

/* switch (FEAT_TRAINS, SELF, switch_yellowhead_power, position_in_consist % 9) {
    3..5: return 1218;
    6..8: return 0;
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_yellowhead_traction, vehicle_is_potentially_powered) {
    1: return int(0.171*255);
    return 0;
}
 */
// Articulate


switch (FEAT_TRAINS, SELF, switch_mlr_articulated_part, extra_callback_info1) {
    1..2: return mlr;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}



//Text

switch (FEAT_TRAINS, SELF, switch_mlr_additional_text, param_cargo_decay) {
    return string(STR_DESC_6, string(STR_ELECTRIC_25KVAC), string(STR_MTR_FIRST_CAN_ATTACH_WAGON), string(STR_FULLNAME_MLR), string(STR_NICKNAME_MLR),string(STR_RELIABILITY_10), string(STR_NORMAL_HEAD_SEAT));
}

item (FEAT_TRAINS, mlr) {
    property {
        // Menu
        name:                           string(STR_NAME_MLR);
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        misc_flags:                     bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_MU);
        engine_class:                   ENGINE_CLASS_ELECTRIC;
        variant_group:                  1984;
        
        // Availability
        climates_available:             ALL_CLIMATES;
        introduction_date:              date(1997,01,01);
        model_life:                     60;
        retire_early:                   35;
        vehicle_life:                   35;
        track_type:                     SACA;

        // Cargo
        refittable_cargo_classes:       bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes:   0;
        cargo_allow_refit:              [PASS, TOUR, YETI, YETY];
        cargo_disallow_refit:           [];
        refit_cost:                     0;
        default_cargo_type:             PASS;
        ai_special_flag:                AI_FLAG_PASSENGER;
        cargo_capacity:                 1;
        loading_speed:                  36 << param_loading_speed;
        cargo_age_period:               140 << param_cargo_decay;

        // Stats
        speed:                          120 km/h;
        power:                          908 kW;
        weight:                         32 ton;
        tractive_effort_coefficient:    0.171;
        cost_factor:                    40;
        running_cost_base:              RUNNING_COST_ELECTRIC;
        running_cost_factor:            10;
        reliability_decay:              10;
        bitmask_vehicle_info:           bitmask(2);
    }
    graphics {
        // Menu
        additional_text:                 string(STR_DESC_6, string(STR_ELECTRIC_25KVAC), string(STR_MTR_FIRST_CAN_ATTACH_WAGON), string(STR_FULLNAME_MLR), string(STR_NICKNAME_MLR),string(STR_RELDEC_LOW, 10), string(STR_NORMAL_HEAD_SEAT));
        can_attach_wagon:               muhead_with_first_class;
        start_stop:                     mu3multicar;

        // Graphics
        default:                        switch_mlr_graphics;
        purchase:                       switch_mlr_purchase_original;
        articulated_part:               switch_mlr_articulated_part;

        // Stats
        length:                         switch_length_2_7_2;
        speed:                          120;
        power:                          return 0;
        purchase_power:                 return 1218; // HP
        tractive_effort_coefficient:    return 0;
        purchase_tractive_effort_coefficient: return int(0.171*255);
        cargo_capacity:                 switch_mlr_capacity;
        cargo_age_period:               140 << param_cargo_decay;
        cost_factor:                    40;
        running_cost_factor:            10  * runningcostfactor() + 20;
        purchase_running_cost_factor:   60;
        purchase_cargo_capacity:        332/2;
        bitmask_vehicle_info:           bitmask(2);
    }

    // Multiple Unit Wagons
    livery_override(normal_emucoach) {
        default:                        switch_mlr_middle_wagon_graphics;
        cargo_capacity:                 switch_mlr_capacity;
        power:                          switch_yellowhead_power;
        tractive_effort_coefficient:    switch_yellowhead_traction;
        length:                         switch_length_2_7_2;
        weight:                         switch_yellowhead_weight;
        can_attach_wagon:               mu_of_mtr;
        cargo_age_period:               140 << param_cargo_decay;
        bitmask_vehicle_info:           0;
        articulated_part:               switch_mtr_wagon_articulated_part;
        cost_factor:                    60;
        running_cost_factor:            switch_yellowhead_running() * runningcostfactor() + accostfactor();
    }
    livery_override(first_emucoach) {
        default:                        switch_mlr_middle_wagon_graphics;
        cargo_capacity:                 switch_mlr_1c_capacity;
        power:                          switch_yellowhead_power;
        tractive_effort_coefficient:    switch_yellowhead_traction;
        length:                         switch_length_2_7_2;
        weight:                         switch_yellowhead_weight;
        can_attach_wagon:               mu_with_first_class;
        cargo_age_period:               240 << param_cargo_decay;
        bitmask_vehicle_info:           0;
        articulated_part:               switch_mtr_wagon_articulated_part;
        cost_factor:                    60;
        running_cost_factor:            switch_yellowhead_running() * runningcostfactor() + accostfactor();
    }
}

// End MLR
sort (FEAT_TRAINS, [
    yellowhead_exurb,
    yellowhead_suburb,
    mlr,
    first_emucoach_with_mailroom,
    first_emucoach,
    first_emucoach_with_mailroom,
]);
